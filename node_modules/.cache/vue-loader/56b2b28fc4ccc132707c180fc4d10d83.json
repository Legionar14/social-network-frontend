{"remainingRequest":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/novalite/internship-project/social-network-vue/src/components/Posts.vue?vue&type=style&index=0&id=67344653&scoped=true&lang=css&","dependencies":[{"path":"/home/novalite/internship-project/social-network-vue/src/components/Posts.vue","mtime":1570106531546},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.post {\n  padding: 5%;\n  margin: 10%;\n  border: 1px solid #343a40;\n  border-radius: 10px;\n}\n.title {\n  text-align: left;\n}\n.body {\n  height: 150px;\n  text-align: center;\n}\n.flex {\n  display: flex;\n  justify-content: space-around;\n}\n.aligne {\n  align-content: center;\n}\n.red {\n  color: rgb(230, 0, 0);\n}\n.link:hover {\n  text-decoration: none;\n}\n.link:visited {\n  text-decoration: none;\n}\n.noPosts {\n  margin-top: 10%;\n}\n.thumbsUp:hover {\n  cursor: pointer;\n}\n",{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Posts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-modal id=\"postDeleted\">You deleted post</b-modal>\n    <b-form-select v-if=\"from === 'main' && loading == false\" class=\"noPosts w-75\" name=\"Posts filter\" v-model=\"selected\" :options=\"options\" @change=\"filter()\"></b-form-select>\n    <b-spinner v-if=\"this.loading\" type=\"grow\" class=\"mt-5\" label=\"Spinning\"></b-spinner>\n    <h5 class=\"noPosts\" v-if=\"posts.length == 0 && from === ''\">Ooops no posts you need to find some friends! :(</h5>\n    <h5 class=\"noPosts\" v-if=\"posts.length == 0 && from === 'profile'\">\n      You don't have any posts. But you can <a class=\"link\" href=\"/create\">create some</a>\n    </h5>\n    <div v-for=\"post of posts\" v-bind:key=\"post.id\" class=\"post\">\n      <div class=\"flex\">\n        <p class=\"title\">{{post.title}}</p>\n        <p>\n          <a v-if=\"editable\" class=\"link\" :href=\"route + post.id\">Edit</a>\n          <a v-if=\"editable\" class=\"ml-3 red link\" href=\"#\" @click=\"deletePost(post.id)\">Delete</a>\n        </p>\n        \n      </div>\n      <hr>\n        <p class=\"body\">{{post.body}}</p>\n        <div class=\"flex\">\n            <p>Author: <a :href=\"routeUser + getUserForPost(post.author)\">{{getUserForPost(post.author)}}</a></p>\n            <b-row>\n              <unicon name=\"thumbs-up\" class=\"thumbsUp\" fill=\"#343a40\" @click=\"like(post.id)\"/>\n              <Likes v-if=\"render\" class=\"ml-2\" :postId=\"post.id\"/>\n            </b-row>\n        </div>\n        <Comments :key=\"post.id\" :postId=\"post.id\" :users=\"users\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport Likes from './Likes.vue'\nimport Comments from \"./Comments.vue\"\n\nexport default {\n  name: 'Posts',\n  components: {\n    Likes,\n    Comments\n  },\n  props: {\n    userId: Number,\n    userIdProfile: Number,\n    from: String\n  },\n  data () {\n    return {\n      posts: [],\n      users: [],\n      route: '/edit/',\n      routeUser: '/users/',\n      editable: false,\n      liked: false,\n      user: JSON.parse(localStorage.getItem('user')),\n      token: JSON.parse(sessionStorage.getItem('token')),\n      loading: false,\n      render: true,\n      selected: null,\n      options: [\n        {value: null, text: 'Posts filter'},\n        {value: 'all', text: 'Get all posts'},\n        {value: 'friends', text: 'Get posts by friends'},\n        {value: 'my', text: 'Get all your posts'},\n      ]\n    }\n  },\n  mounted() {\n    this.loading = true;\n  },\n  created() {\n\n    axios.defaults.headers['jw_token'] = this.token;\n\n    if(this.userIdProfile != undefined ){\n      this.editable = true;\n      axios\n      .get(`http://localhost:9000/posts/user/${this.userIdProfile}`)\n      .then((response) => {\n        this.posts = response.data\n      }).then(() => { this.forceRender() })\n    } else if(this.userId != undefined) {\n      this.editable = false;\n      axios\n      .get(`http://localhost:9000/posts/user/${this.userId}`)\n      .then((response) => {\n        this.posts = response.data\n      }).then(() => { this.forceRender() })\n    } else {\n      this.editable = false;\n      axios\n      .get(`http://localhost:9000/posts/friends/${this.user.id}`)\n      .then((response) => {\n        this.posts = response.data\n      }).then(() => { this.forceRender() })\n    }\n    axios\n      .get('http://localhost:9000/users')\n      .then((response) => {\n      this.users = response.data\n    }).then(() => { this.loading = false })\n  },\n  methods: {\n    like: function(id) {\n      axios.get(`http://localhost:9000/liked/${id}/${this.user.id}`)\n      .then((response) => this.liked = response.data.liked).then(() => {\n        if(this.liked) {\n          axios.delete(`http://localhost:9000/dislike/${id}/${this.user.id}`)\n          .then(() => { this.forceRender(); })\n        } else {\n          axios.post(`http://localhost:9000/like`, {\n            userId: this.user.id,\n            postId: id\n          }).then(() => { this.forceRender();})\n        }\n      }) \n    },\n    getUserForPost(id) {\n      return this.users.find(x => x.id == id).username\n    },\n    deletePost: function(id) {\n      axios.delete(`http://localhost:9000/posts/${id}`)\n      .then(() => {\n        this.$bvModal.show('postDeleted')\n        window.location.reload();\n      })\n    },\n    filter() {\n      if(this.selected === 'friends' || this.selected == null) {\n        this.editable = false;\n        axios\n        .get(`http://localhost:9000/posts/friends/${this.user.id}`)\n        .then((response) => {\n          this.posts = response.data\n        })\n      } else if (this.selected === 'all') {\n        this.editable = false;\n        axios\n        .get(`http://localhost:9000/posts`)\n        .then((response) => {\n          this.posts = response.data\n        })\n      } else if (this.selected === 'my') {\n        this.editable = false;\n        axios\n        .get(`http://localhost:9000/posts/user/${this.user.id}`)\n        .then((response) => {\n          this.posts = response.data\n        })\n      }\n      this.forceRender();\n    },\n    forceRender() {\n      this.render = false;\n\n      this.$nextTick(() => {\n          this.render = true;\n      })\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.post {\n  padding: 5%;\n  margin: 10%;\n  border: 1px solid #343a40;\n  border-radius: 10px;\n}\n.title {\n  text-align: left;\n}\n.body {\n  height: 150px;\n  text-align: center;\n}\n.flex {\n  display: flex;\n  justify-content: space-around;\n}\n.aligne {\n  align-content: center;\n}\n.red {\n  color: rgb(230, 0, 0);\n}\n.link:hover {\n  text-decoration: none;\n}\n.link:visited {\n  text-decoration: none;\n}\n.noPosts {\n  margin-top: 10%;\n}\n.thumbsUp:hover {\n  cursor: pointer;\n}\n</style>\n"]}]}