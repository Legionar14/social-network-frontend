{"remainingRequest":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/novalite/internship-project/social-network-vue/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/novalite/internship-project/social-network-vue/src/components/Search.vue","mtime":1570001983135},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navbar from './Navbar.vue'\nimport axios from 'axios'\n\nexport default {\n    name: 'Search',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            users: [],\n            searchItem: '',\n            route: '/users/',\n            empty: false,\n            token: JSON.parse(sessionStorage.getItem('token'))\n        }\n    },\n    methods: {\n        getUsers() {\n            axios.defaults.headers['jw_token'] = this.token;\n\n            this.empty = false;\n\n            if(this.searchItem === '') {\n                this.empty = true;\n                return;\n            }\n\n            axios.get(`http://localhost:9000/users/${this.searchItem}`)\n            .then((response) => { this.users = response.data })\n            .then(() => {\n                if(this.users.length == 0) {\n                    axios.get(`http://localhost:9000/users/f/${this.searchItem}`)\n                    .then((response) => { this.users = response.data })\n                    .then(() => {\n                        if(this.users.length == 0) {\n                            this.getByLastName();\n                        }\n                    })\n                }\n            })\n            \n        },\n        getByLastName() {\n            axios.get(`http://localhost:9000/users/l/${this.searchItem}`)\n            .then((response) => {\n                this.users = response.data\n            }).then(() => {\n                if(this.users.length == 0) {\n                    this.empty = true;\n                }\n            })\n        }\n    }\n}\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <Navbar />\n    <div class=\"grid container\">\n        <div class=\"input\">\n        <h1>Search</h1>\n        <b-col>\n            <b-form-input type=\"text\" id=\"text\" v-model=\"searchItem\" placeholder=\"Please enter search term\" required></b-form-input>\n            <b-button type=\"submit\" @click=\"getUsers()\">Search</b-button>\n        </b-col>\n        </div>\n        <div class=\"usersList\">\n            <p v-if=\"empty\">No users with that credentials</p>\n            <div class=\"userData\" v-for=\"user of users\" :key=\"user.id\">\n                <p><b>Username: </b><a :href=\"route + user.username\">{{user.username}}</a></p>\n                <p><b>First name:</b> {{user.firstName}}</p>\n                <p><b>Last name:</b> {{user.lastName}}</p>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Navbar from './Navbar.vue'\nimport axios from 'axios'\n\nexport default {\n    name: 'Search',\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            users: [],\n            searchItem: '',\n            route: '/users/',\n            empty: false,\n            token: JSON.parse(sessionStorage.getItem('token'))\n        }\n    },\n    methods: {\n        getUsers() {\n            axios.defaults.headers['jw_token'] = this.token;\n\n            this.empty = false;\n\n            if(this.searchItem === '') {\n                this.empty = true;\n                return;\n            }\n\n            axios.get(`http://localhost:9000/users/${this.searchItem}`)\n            .then((response) => { this.users = response.data })\n            .then(() => {\n                if(this.users.length == 0) {\n                    axios.get(`http://localhost:9000/users/f/${this.searchItem}`)\n                    .then((response) => { this.users = response.data })\n                    .then(() => {\n                        if(this.users.length == 0) {\n                            this.getByLastName();\n                        }\n                    })\n                }\n            })\n            \n        },\n        getByLastName() {\n            axios.get(`http://localhost:9000/users/l/${this.searchItem}`)\n            .then((response) => {\n                this.users = response.data\n            }).then(() => {\n                if(this.users.length == 0) {\n                    this.empty = true;\n                }\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n.grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n}\n.input {\n    margin-top: 10%;\n    grid-column-start: 2;\n}\n#text {\n    margin: 20px 0;\n}\n.userData {\n    border: 1px solid #343a40;\n    border-radius: 10px;\n    padding: 15px;\n}\n.usersList {\n    margin-top: 10%;\n    grid-column-start: 2;\n}\n</style>"]}]}