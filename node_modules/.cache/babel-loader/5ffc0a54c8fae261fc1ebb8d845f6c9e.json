{"remainingRequest":"/home/novalite/internship-project/social-network-vue/node_modules/babel-loader/lib/index.js!/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/novalite/internship-project/social-network-vue/src/components/Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/novalite/internship-project/social-network-vue/src/components/Comments.vue","mtime":1570106152166},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  name: 'Comments',\n  props: {\n    postId: Number,\n    users: Array\n  },\n  data: function data() {\n    return {\n      comments: [],\n      commentBody: '',\n      commentTitle: '',\n      route: '/users/',\n      user: JSON.parse(localStorage.getItem('user')),\n      empty: false\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    axios.get(\"http://localhost:9000/comments/\".concat(this.postId)).then(function (response) {\n      _this.comments = response.data;\n\n      _this.comments.reverse();\n    });\n  },\n  methods: {\n    toggle: function toggle() {\n      this.$root.$emit('bv::toggle::collapse', this.postId);\n    },\n    findAuthor: function findAuthor(id) {\n      return this.users.find(function (x) {\n        return x.id == id;\n      }).username;\n    },\n    comment: function comment() {\n      var _this2 = this;\n\n      if (this.commentBody != '' && this.commentTitle != '') {\n        axios.post('http://localhost:9000/comment', {\n          postId: this.postId,\n          author: this.user.id,\n          commentTitle: this.commentTitle,\n          commentBody: this.commentBody\n        }).then(function () {\n          axios.get(\"http://localhost:9000/comments/\".concat(_this2.postId)).then(function (response) {\n            _this2.comments = response.data;\n\n            _this2.comments.reverse();\n          }).then(function () {\n            _this2.commentTitle = '';\n            _this2.commentBody = '';\n          });\n        });\n      } else {\n        this.empty = true;\n        setTimeout(function () {\n          _this2.empty = false;\n        }, 2000);\n      }\n    },\n    deleteComment: function deleteComment(id) {\n      var _this3 = this;\n\n      axios.delete(\"http://localhost:9000/comment/\".concat(id)).then(function () {\n        axios.get(\"http://localhost:9000/comments/\".concat(_this3.postId)).then(function (response) {\n          _this3.comments = response.data;\n\n          _this3.comments.reverse();\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,SAJA;AAKA,MAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CALA;AAMA,MAAA,KAAA,EAAA;AANA,KAAA;AAQA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,IAAA,KAAA,CAAA,GAAA,0CAAA,KAAA,MAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,OAAA;AACA,KAJA;AAKA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,sBAAA,EAAA,KAAA,MAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,EAJA,EAIA;AACA,aAAA,KAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,IAAA,EAAA;AAAA,OAAA,EAAA,QAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AAAA;;AACA,UAAA,KAAA,WAAA,IAAA,EAAA,IAAA,KAAA,YAAA,IAAA,EAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AACA,UAAA,MAAA,EAAA,KAAA,MADA;AAEA,UAAA,MAAA,EAAA,KAAA,IAAA,CAAA,EAFA;AAGA,UAAA,YAAA,EAAA,KAAA,YAHA;AAIA,UAAA,WAAA,EAAA,KAAA;AAJA,SAAA,EAKA,IALA,CAKA,YAAA;AACA,UAAA,KAAA,CAAA,GAAA,0CAAA,MAAA,CAAA,MAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;;AACA,YAAA,MAAA,CAAA,QAAA,CAAA,OAAA;AACA,WAJA,EAIA,IAJA,CAIA,YAAA;AACA,YAAA,MAAA,CAAA,YAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,WAAA,GAAA,EAAA;AACA,WAPA;AAQA,SAdA;AAeA,OAhBA,MAgBA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,KAAA;AACA,SAFA,EAEA,IAFA,CAAA;AAGA;AACA,KA9BA;AA+BA,IAAA,aA/BA,yBA+BA,EA/BA,EA+BA;AAAA;;AACA,MAAA,KAAA,CAAA,MAAA,yCAAA,EAAA,GACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,GAAA,0CAAA,MAAA,CAAA,MAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA;AACA,SAJA;AAKA,OAPA;AAQA;AAxCA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"border\">\n    <b-button @click=\"toggle()\" variant=\"dark\">Show comments</b-button>\n\n    <b-collapse :id=\"postId\" class=\"mt-2\">\n\n        <div class=\"m-3\">\n            <b-form-input class=\"mb-2\" v-model=\"commentTitle\" placeholder=\"Comment title\"></b-form-input>\n            <b-form-textarea v-model=\"commentBody\"  placeholder=\"Comment text...\"></b-form-textarea>\n            <p v-if=\"empty\" class=\"m-3\">To comment you need to enter title and text first. </p>\n            <b-button class=\"m-3\" @click=\"comment()\" variant=\"dark\">Comment</b-button>\n        </div>\n        <div v-for=\"comment of comments\" :key=\"comment.id\">\n            <b-card :header=\"comment.commentTitle\" class=\"mb-3\">\n                <p>{{comment.commentBody}}</p>\n                <div class=\"mt-5\">\n                    <p class=\"float-left\">\n                        <b>Author:</b><a class=\"ml-2\" @click.middle=\"toggle()\" :href=\"route + findAuthor(comment.author)\">{{findAuthor(comment.author)}}</a>\n                    </p>\n                    <unicon v-if=\"user.username === findAuthor(comment.author)\" \n                        class=\"float-right trash\" name=\"trash-alt\" fill=\"red\" @click=\"deleteComment(comment.id)\" />\n                </div>\n            </b-card>\n        </div>\n    </b-collapse>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n    name: 'Comments',\n    props: {\n        postId: Number,\n        users: Array,\n    },\n    data() {\n        return {\n            comments: [],\n            commentBody: '',\n            commentTitle: '',\n            route: '/users/',\n            user: JSON.parse(localStorage.getItem('user')),\n            empty: false\n        }\n    },\n    created() {\n        axios.get(`http://localhost:9000/comments/${this.postId}`)\n        .then((response) => {\n            this.comments = response.data;\n            this.comments.reverse()\n        })\n    },\n    methods: {\n        toggle() {\n            this.$root.$emit('bv::toggle::collapse', this.postId)\n        },\n        findAuthor(id) {\n            return this.users.find(x => x.id == id).username;\n        },\n        comment() {\n            if(this.commentBody != '' && this.commentTitle != ''){\n                axios.post('http://localhost:9000/comment', {\n                postId: this.postId,\n                author: this.user.id,\n                commentTitle: this.commentTitle,\n                commentBody: this.commentBody\n                }).then(() => {\n                    axios.get(`http://localhost:9000/comments/${this.postId}`)\n                    .then((response) => {\n                        this.comments = response.data;\n                        this.comments.reverse()\n                    }).then(() => {\n                        this.commentTitle = '';\n                        this.commentBody = '';\n                    })\n                })\n            } else {\n                this.empty = true;\n                setTimeout(() => {\n                    this.empty = false;\n                }, 2000)\n            }\n        },\n        deleteComment(id) {\n            axios.delete(`http://localhost:9000/comment/${id}`)\n            .then(() => {\n                axios.get(`http://localhost:9000/comments/${this.postId}`)\n                .then((response) => {\n                    this.comments = response.data;\n                    this.comments.reverse()\n                })\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .border {\n        border: 1px solid grey;\n        padding: 20px;\n        border-radius: 10px;\n    }\n    .trash:hover {\n        cursor: pointer;\n    }\n</style>"],"sourceRoot":"src/components"}]}