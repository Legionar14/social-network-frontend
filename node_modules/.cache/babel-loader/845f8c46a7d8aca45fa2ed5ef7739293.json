{"remainingRequest":"/home/novalite/internship-project/social-network-vue/node_modules/babel-loader/lib/index.js!/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/novalite/internship-project/social-network-vue/src/components/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/novalite/internship-project/social-network-vue/src/components/Posts.vue","mtime":1570106531546},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novalite/internship-project/social-network-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport Likes from \"./Likes.vue\";\nimport Comments from \"./Comments.vue\";\nexport default {\n  name: 'Posts',\n  components: {\n    Likes: Likes,\n    Comments: Comments\n  },\n  props: {\n    userId: Number,\n    userIdProfile: Number,\n    from: String\n  },\n  data: function data() {\n    return {\n      posts: [],\n      users: [],\n      route: '/edit/',\n      routeUser: '/users/',\n      editable: false,\n      liked: false,\n      user: JSON.parse(localStorage.getItem('user')),\n      token: JSON.parse(sessionStorage.getItem('token')),\n      loading: false,\n      render: true,\n      selected: null,\n      options: [{\n        value: null,\n        text: 'Posts filter'\n      }, {\n        value: 'all',\n        text: 'Get all posts'\n      }, {\n        value: 'friends',\n        text: 'Get posts by friends'\n      }, {\n        value: 'my',\n        text: 'Get all your posts'\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.loading = true;\n  },\n  created: function created() {\n    var _this = this;\n\n    axios.defaults.headers['jw_token'] = this.token;\n\n    if (this.userIdProfile != undefined) {\n      this.editable = true;\n      axios.get(\"http://localhost:9000/posts/user/\".concat(this.userIdProfile)).then(function (response) {\n        _this.posts = response.data;\n      }).then(function () {\n        _this.forceRender();\n      });\n    } else if (this.userId != undefined) {\n      this.editable = false;\n      axios.get(\"http://localhost:9000/posts/user/\".concat(this.userId)).then(function (response) {\n        _this.posts = response.data;\n      }).then(function () {\n        _this.forceRender();\n      });\n    } else {\n      this.editable = false;\n      axios.get(\"http://localhost:9000/posts/friends/\".concat(this.user.id)).then(function (response) {\n        _this.posts = response.data;\n      }).then(function () {\n        _this.forceRender();\n      });\n    }\n\n    axios.get('http://localhost:9000/users').then(function (response) {\n      _this.users = response.data;\n    }).then(function () {\n      _this.loading = false;\n    });\n  },\n  methods: {\n    like: function like(id) {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:9000/liked/\".concat(id, \"/\").concat(this.user.id)).then(function (response) {\n        return _this2.liked = response.data.liked;\n      }).then(function () {\n        if (_this2.liked) {\n          axios.delete(\"http://localhost:9000/dislike/\".concat(id, \"/\").concat(_this2.user.id)).then(function () {\n            _this2.forceRender();\n          });\n        } else {\n          axios.post(\"http://localhost:9000/like\", {\n            userId: _this2.user.id,\n            postId: id\n          }).then(function () {\n            _this2.forceRender();\n          });\n        }\n      });\n    },\n    getUserForPost: function getUserForPost(id) {\n      return this.users.find(function (x) {\n        return x.id == id;\n      }).username;\n    },\n    deletePost: function deletePost(id) {\n      var _this3 = this;\n\n      axios.delete(\"http://localhost:9000/posts/\".concat(id)).then(function () {\n        _this3.$bvModal.show('postDeleted');\n\n        window.location.reload();\n      });\n    },\n    filter: function filter() {\n      var _this4 = this;\n\n      if (this.selected === 'friends' || this.selected == null) {\n        this.editable = false;\n        axios.get(\"http://localhost:9000/posts/friends/\".concat(this.user.id)).then(function (response) {\n          _this4.posts = response.data;\n        });\n      } else if (this.selected === 'all') {\n        this.editable = false;\n        axios.get(\"http://localhost:9000/posts\").then(function (response) {\n          _this4.posts = response.data;\n        });\n      } else if (this.selected === 'my') {\n        this.editable = false;\n        axios.get(\"http://localhost:9000/posts/user/\".concat(this.user.id)).then(function (response) {\n          _this4.posts = response.data;\n        });\n      }\n\n      this.forceRender();\n    },\n    forceRender: function forceRender() {\n      var _this5 = this;\n\n      this.render = false;\n      this.$nextTick(function () {\n        _this5.render = true;\n      });\n    }\n  }\n};",{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA;AACA,OAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,QAAA,EAAA;AAFA,GAFA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,aAAA,EAAA,MAFA;AAGA,IAAA,IAAA,EAAA;AAHA,GANA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,QAHA;AAIA,MAAA,SAAA,EAAA,SAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,KAAA,EAAA,KANA;AAOA,MAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAPA;AAQA,MAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CARA;AASA,MAAA,OAAA,EAAA,KATA;AAUA,MAAA,MAAA,EAAA,IAVA;AAWA,MAAA,QAAA,EAAA,IAXA;AAYA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA;AAZA,KAAA;AAmBA,GA/BA;AAgCA,EAAA,OAhCA,qBAgCA;AACA,SAAA,OAAA,GAAA,IAAA;AACA,GAlCA;AAmCA,EAAA,OAnCA,qBAmCA;AAAA;;AAEA,IAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,IAAA,KAAA,KAAA;;AAEA,QAAA,KAAA,aAAA,IAAA,SAAA,EAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,MAAA,KAAA,CACA,GADA,4CACA,KAAA,aADA,GAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAIA,IAJA,CAIA,YAAA;AAAA,QAAA,KAAA,CAAA,WAAA;AAAA,OAJA;AAKA,KAPA,MAOA,IAAA,KAAA,MAAA,IAAA,SAAA,EAAA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,MAAA,KAAA,CACA,GADA,4CACA,KAAA,MADA,GAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAIA,IAJA,CAIA,YAAA;AAAA,QAAA,KAAA,CAAA,WAAA;AAAA,OAJA;AAKA,KAPA,MAOA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,MAAA,KAAA,CACA,GADA,+CACA,KAAA,IAAA,CAAA,EADA,GAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAIA,IAJA,CAIA,YAAA;AAAA,QAAA,KAAA,CAAA,WAAA;AAAA,OAJA;AAKA;;AACA,IAAA,KAAA,CACA,GADA,CACA,6BADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAJA,EAIA,IAJA,CAIA,YAAA;AAAA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AAAA,KAJA;AAKA,GAlEA;AAmEA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,cAAA,EAAA,EAAA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,uCAAA,EAAA,cAAA,KAAA,IAAA,CAAA,EAAA,GACA,IADA,CACA,UAAA,QAAA;AAAA,eAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AAAA,OADA,EACA,IADA,CACA,YAAA;AACA,YAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,yCAAA,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA,EAAA,GACA,IADA,CACA,YAAA;AAAA,YAAA,MAAA,CAAA,WAAA;AAAA,WADA;AAEA,SAHA,MAGA;AACA,UAAA,KAAA,CAAA,IAAA,+BAAA;AACA,YAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA,EAGA,IAHA,CAGA,YAAA;AAAA,YAAA,MAAA,CAAA,WAAA;AAAA,WAHA;AAIA;AACA,OAXA;AAYA,KAdA;AAeA,IAAA,cAfA,0BAeA,EAfA,EAeA;AACA,aAAA,KAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,IAAA,EAAA;AAAA,OAAA,EAAA,QAAA;AACA,KAjBA;AAkBA,IAAA,UAAA,EAAA,oBAAA,EAAA,EAAA;AAAA;;AACA,MAAA,KAAA,CAAA,MAAA,uCAAA,EAAA,GACA,IADA,CACA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,aAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,MAAA;AACA,OAJA;AAKA,KAxBA;AAyBA,IAAA,MAzBA,oBAyBA;AAAA;;AACA,UAAA,KAAA,QAAA,KAAA,SAAA,IAAA,KAAA,QAAA,IAAA,IAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,QAAA,KAAA,CACA,GADA,+CACA,KAAA,IAAA,CAAA,EADA,GAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,SAJA;AAKA,OAPA,MAOA,IAAA,KAAA,QAAA,KAAA,KAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,QAAA,KAAA,CACA,GADA,gCAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,SAJA;AAKA,OAPA,MAOA,IAAA,KAAA,QAAA,KAAA,IAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,QAAA,KAAA,CACA,GADA,4CACA,KAAA,IAAA,CAAA,EADA,GAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,SAJA;AAKA;;AACA,WAAA,WAAA;AACA,KAjDA;AAkDA,IAAA,WAlDA,yBAkDA;AAAA;;AACA,WAAA,MAAA,GAAA,KAAA;AAEA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AACA,OAFA;AAGA;AAxDA;AAnEA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-modal id=\"postDeleted\">You deleted post</b-modal>\n    <b-form-select v-if=\"from === 'main' && loading == false\" class=\"noPosts w-75\" name=\"Posts filter\" v-model=\"selected\" :options=\"options\" @change=\"filter()\"></b-form-select>\n    <b-spinner v-if=\"this.loading\" type=\"grow\" class=\"mt-5\" label=\"Spinning\"></b-spinner>\n    <h5 class=\"noPosts\" v-if=\"posts.length == 0 && from === ''\">Ooops no posts you need to find some friends! :(</h5>\n    <h5 class=\"noPosts\" v-if=\"posts.length == 0 && from === 'profile'\">\n      You don't have any posts. But you can <a class=\"link\" href=\"/create\">create some</a>\n    </h5>\n    <div v-for=\"post of posts\" v-bind:key=\"post.id\" class=\"post\">\n      <div class=\"flex\">\n        <p class=\"title\">{{post.title}}</p>\n        <p>\n          <a v-if=\"editable\" class=\"link\" :href=\"route + post.id\">Edit</a>\n          <a v-if=\"editable\" class=\"ml-3 red link\" href=\"#\" @click=\"deletePost(post.id)\">Delete</a>\n        </p>\n        \n      </div>\n      <hr>\n        <p class=\"body\">{{post.body}}</p>\n        <div class=\"flex\">\n            <p>Author: <a :href=\"routeUser + getUserForPost(post.author)\">{{getUserForPost(post.author)}}</a></p>\n            <b-row>\n              <unicon name=\"thumbs-up\" class=\"thumbsUp\" fill=\"#343a40\" @click=\"like(post.id)\"/>\n              <Likes v-if=\"render\" class=\"ml-2\" :postId=\"post.id\"/>\n            </b-row>\n        </div>\n        <Comments :key=\"post.id\" :postId=\"post.id\" :users=\"users\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport Likes from './Likes.vue'\nimport Comments from \"./Comments.vue\"\n\nexport default {\n  name: 'Posts',\n  components: {\n    Likes,\n    Comments\n  },\n  props: {\n    userId: Number,\n    userIdProfile: Number,\n    from: String\n  },\n  data () {\n    return {\n      posts: [],\n      users: [],\n      route: '/edit/',\n      routeUser: '/users/',\n      editable: false,\n      liked: false,\n      user: JSON.parse(localStorage.getItem('user')),\n      token: JSON.parse(sessionStorage.getItem('token')),\n      loading: false,\n      render: true,\n      selected: null,\n      options: [\n        {value: null, text: 'Posts filter'},\n        {value: 'all', text: 'Get all posts'},\n        {value: 'friends', text: 'Get posts by friends'},\n        {value: 'my', text: 'Get all your posts'},\n      ]\n    }\n  },\n  mounted() {\n    this.loading = true;\n  },\n  created() {\n\n    axios.defaults.headers['jw_token'] = this.token;\n\n    if(this.userIdProfile != undefined ){\n      this.editable = true;\n      axios\n      .get(`http://localhost:9000/posts/user/${this.userIdProfile}`)\n      .then((response) => {\n        this.posts = response.data\n      }).then(() => { this.forceRender() })\n    } else if(this.userId != undefined) {\n      this.editable = false;\n      axios\n      .get(`http://localhost:9000/posts/user/${this.userId}`)\n      .then((response) => {\n        this.posts = response.data\n      }).then(() => { this.forceRender() })\n    } else {\n      this.editable = false;\n      axios\n      .get(`http://localhost:9000/posts/friends/${this.user.id}`)\n      .then((response) => {\n        this.posts = response.data\n      }).then(() => { this.forceRender() })\n    }\n    axios\n      .get('http://localhost:9000/users')\n      .then((response) => {\n      this.users = response.data\n    }).then(() => { this.loading = false })\n  },\n  methods: {\n    like: function(id) {\n      axios.get(`http://localhost:9000/liked/${id}/${this.user.id}`)\n      .then((response) => this.liked = response.data.liked).then(() => {\n        if(this.liked) {\n          axios.delete(`http://localhost:9000/dislike/${id}/${this.user.id}`)\n          .then(() => { this.forceRender(); })\n        } else {\n          axios.post(`http://localhost:9000/like`, {\n            userId: this.user.id,\n            postId: id\n          }).then(() => { this.forceRender();})\n        }\n      }) \n    },\n    getUserForPost(id) {\n      return this.users.find(x => x.id == id).username\n    },\n    deletePost: function(id) {\n      axios.delete(`http://localhost:9000/posts/${id}`)\n      .then(() => {\n        this.$bvModal.show('postDeleted')\n        window.location.reload();\n      })\n    },\n    filter() {\n      if(this.selected === 'friends' || this.selected == null) {\n        this.editable = false;\n        axios\n        .get(`http://localhost:9000/posts/friends/${this.user.id}`)\n        .then((response) => {\n          this.posts = response.data\n        })\n      } else if (this.selected === 'all') {\n        this.editable = false;\n        axios\n        .get(`http://localhost:9000/posts`)\n        .then((response) => {\n          this.posts = response.data\n        })\n      } else if (this.selected === 'my') {\n        this.editable = false;\n        axios\n        .get(`http://localhost:9000/posts/user/${this.user.id}`)\n        .then((response) => {\n          this.posts = response.data\n        })\n      }\n      this.forceRender();\n    },\n    forceRender() {\n      this.render = false;\n\n      this.$nextTick(() => {\n          this.render = true;\n      })\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.post {\n  padding: 5%;\n  margin: 10%;\n  border: 1px solid #343a40;\n  border-radius: 10px;\n}\n.title {\n  text-align: left;\n}\n.body {\n  height: 150px;\n  text-align: center;\n}\n.flex {\n  display: flex;\n  justify-content: space-around;\n}\n.aligne {\n  align-content: center;\n}\n.red {\n  color: rgb(230, 0, 0);\n}\n.link:hover {\n  text-decoration: none;\n}\n.link:visited {\n  text-decoration: none;\n}\n.noPosts {\n  margin-top: 10%;\n}\n.thumbsUp:hover {\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components"}]}